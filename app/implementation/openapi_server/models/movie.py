# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Movie(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, synopsis=None, directors=None, producers=None, writers=None, actors=None, duration=None, tags=None, genres=None, release_date=None, characters=None, staff=None, rating=None):  # noqa: E501
        """Movie - a model defined in OpenAPI

        :param id: The id of this Movie.  # noqa: E501
        :type id: str
        :param name: The name of this Movie.  # noqa: E501
        :type name: str
        :param synopsis: The synopsis of this Movie.  # noqa: E501
        :type synopsis: str
        :param directors: The directors of this Movie.  # noqa: E501
        :type directors: List[str]
        :param producers: The producers of this Movie.  # noqa: E501
        :type producers: List[str]
        :param writers: The writers of this Movie.  # noqa: E501
        :type writers: List[str]
        :param actors: The actors of this Movie.  # noqa: E501
        :type actors: List[str]
        :param duration: The duration of this Movie.  # noqa: E501
        :type duration: int
        :param tags: The tags of this Movie.  # noqa: E501
        :type tags: List[str]
        :param genres: The genres of this Movie.  # noqa: E501
        :type genres: List[str]
        :param release_date: The release_date of this Movie.  # noqa: E501
        :type release_date: date
        :param characters: The characters of this Movie.  # noqa: E501
        :type characters: List[AnimeCharacters]
        :param staff: The staff of this Movie.  # noqa: E501
        :type staff: List[AnimeCharacters]
        :param rating: The rating of this Movie.  # noqa: E501
        :type rating: float
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'synopsis': str,
            'directors': List[str],
            'producers': List[str],
            'writers': List[str],
            'actors': List[str],
            'duration': int,
            'tags': List[str],
            'genres': List[str],
            'release_date': date,
            'characters': List[AnimeCharacters],
            'staff': List[AnimeCharacters],
            'rating': float
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'synopsis': 'synopsis',
            'directors': 'directors',
            'producers': 'producers',
            'writers': 'writers',
            'actors': 'actors',
            'duration': 'duration',
            'tags': 'tags',
            'genres': 'genres',
            'release_date': 'release_date',
            'characters': 'characters',
            'staff': 'staff',
            'rating': 'rating'
        }

        self._id = id
        self._name = name
        self._synopsis = synopsis
        self._directors = directors
        self._producers = producers
        self._writers = writers
        self._actors = actors
        self._duration = duration
        self._tags = tags
        self._genres = genres
        self._release_date = release_date
        self._characters = characters
        self._staff = staff
        self._rating = rating

    @classmethod
    def from_dict(cls, dikt) -> 'Movie':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Movie of this Movie.  # noqa: E501
        :rtype: Movie
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Movie.


        :return: The id of this Movie.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Movie.


        :param id: The id of this Movie.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Movie.


        :return: The name of this Movie.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Movie.


        :param name: The name of this Movie.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def synopsis(self):
        """Gets the synopsis of this Movie.

        Movie synopsis.  # noqa: E501

        :return: The synopsis of this Movie.
        :rtype: str
        """
        return self._synopsis

    @synopsis.setter
    def synopsis(self, synopsis):
        """Sets the synopsis of this Movie.

        Movie synopsis.  # noqa: E501

        :param synopsis: The synopsis of this Movie.
        :type synopsis: str
        """
        if synopsis is None:
            raise ValueError("Invalid value for `synopsis`, must not be `None`")  # noqa: E501

        self._synopsis = synopsis

    @property
    def directors(self):
        """Gets the directors of this Movie.


        :return: The directors of this Movie.
        :rtype: List[str]
        """
        return self._directors

    @directors.setter
    def directors(self, directors):
        """Sets the directors of this Movie.


        :param directors: The directors of this Movie.
        :type directors: List[str]
        """

        self._directors = directors

    @property
    def producers(self):
        """Gets the producers of this Movie.


        :return: The producers of this Movie.
        :rtype: List[str]
        """
        return self._producers

    @producers.setter
    def producers(self, producers):
        """Sets the producers of this Movie.


        :param producers: The producers of this Movie.
        :type producers: List[str]
        """

        self._producers = producers

    @property
    def writers(self):
        """Gets the writers of this Movie.


        :return: The writers of this Movie.
        :rtype: List[str]
        """
        return self._writers

    @writers.setter
    def writers(self, writers):
        """Sets the writers of this Movie.


        :param writers: The writers of this Movie.
        :type writers: List[str]
        """

        self._writers = writers

    @property
    def actors(self):
        """Gets the actors of this Movie.


        :return: The actors of this Movie.
        :rtype: List[str]
        """
        return self._actors

    @actors.setter
    def actors(self, actors):
        """Sets the actors of this Movie.


        :param actors: The actors of this Movie.
        :type actors: List[str]
        """

        self._actors = actors

    @property
    def duration(self):
        """Gets the duration of this Movie.

        Duration in minutes.  # noqa: E501

        :return: The duration of this Movie.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this Movie.

        Duration in minutes.  # noqa: E501

        :param duration: The duration of this Movie.
        :type duration: int
        """

        self._duration = duration

    @property
    def tags(self):
        """Gets the tags of this Movie.


        :return: The tags of this Movie.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Movie.


        :param tags: The tags of this Movie.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def genres(self):
        """Gets the genres of this Movie.


        :return: The genres of this Movie.
        :rtype: List[str]
        """
        return self._genres

    @genres.setter
    def genres(self, genres):
        """Sets the genres of this Movie.


        :param genres: The genres of this Movie.
        :type genres: List[str]
        """

        self._genres = genres

    @property
    def release_date(self):
        """Gets the release_date of this Movie.


        :return: The release_date of this Movie.
        :rtype: date
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date):
        """Sets the release_date of this Movie.


        :param release_date: The release_date of this Movie.
        :type release_date: date
        """

        self._release_date = release_date

    @property
    def characters(self):
        """Gets the characters of this Movie.


        :return: The characters of this Movie.
        :rtype: List[AnimeCharacters]
        """
        return self._characters

    @characters.setter
    def characters(self, characters):
        """Sets the characters of this Movie.


        :param characters: The characters of this Movie.
        :type characters: List[AnimeCharacters]
        """

        self._characters = characters

    @property
    def staff(self):
        """Gets the staff of this Movie.


        :return: The staff of this Movie.
        :rtype: List[AnimeCharacters]
        """
        return self._staff

    @staff.setter
    def staff(self, staff):
        """Sets the staff of this Movie.


        :param staff: The staff of this Movie.
        :type staff: List[AnimeCharacters]
        """

        self._staff = staff

    @property
    def rating(self):
        """Gets the rating of this Movie.

        Rating out of 100.  # noqa: E501

        :return: The rating of this Movie.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Movie.

        Rating out of 100.  # noqa: E501

        :param rating: The rating of this Movie.
        :type rating: float
        """

        self._rating = rating
